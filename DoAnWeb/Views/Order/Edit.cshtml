@model DoAnWeb.Models.tb_Order
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div>
            <h2>Thông tin người gửi</h2>

            <div class="form-group">
                @Html.LabelFor(model => model.SenderName, "Họ tên", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SenderName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SenderPhone, "Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SenderPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SenderPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SenderAddress, "Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SenderAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SenderAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <h2>Thông tin người nhận</h2>

            <div class="form-group">
                @Html.LabelFor(model => model.ReceiverName, "Họ tên", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReceiverPhone, "Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReceiverPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceiverPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReceiverAddress, "Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReceiverAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceiverAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <h2>Thông tin hàng hóa</h2>
            <div class="form-group">
                @Html.LabelFor(model => model.ItemCode, "Mã đơn hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemName, "Tên đơn hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemWeight, "Cân nặng", htmlAttributes: new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemWeight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemWeight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemValue, "Giá trị đơn hàng", htmlAttributes: new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemValue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemValue, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <h2>Thông tin thanh toán</h2>

            <div class="form-group">
                @Html.LabelFor(model => model.PaymentMethodCod, "Phương thức thanh toán", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.PaymentMethodCod, new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "Tiền mặt", Value = "tien-mat" },
                                    new SelectListItem { Text = "Thẻ", Value = "the" },
                                }, "Chọn hình thức thanh toán", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payer, "Người trả cước", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Payer, new List<SelectListItem>
                        {
                        new SelectListItem { Text = "Người gửi", Value = "nguoi-gui" },
                        new SelectListItem { Text = "Người nhận", Value = "nguoi-nhan" },
                        }, "Chọn người trả cước", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Note, "Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PickUpRequest, "Yêu cầu lấy hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.PickUpRequest, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Đến lấy hàng tại nhà", Value = "lay-hang-tai-nha" },
                        new SelectListItem { Text = "Gửi tại bưu cục", Value = "gui-tai-buu-cuc" },
                    }, "Chọn yêu cầu lấy hàng", new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
