@model DoAnWeb.Models.Dto.tb_shippingDto
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/driver" class="nav-link">Kho Hàng</a>
        </li>
    </ul>
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quản lý kho hàng</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Danh mục</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

@Html.ActionLink("* Quay về *   ", "Index", "WareHouse")



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-10">
                <p id="warehouse" style="display:none;">@TempData["WareHouseId"]</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order_id, "Chọn đơn hàng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.order_id, new
                {
                    htmlAttributes = new
                    {
                        @class = "cb_text_order form-control",
                        @Style = "display:none;"
                    }
})
                <select data-placeholder="Chosse order name..." id="orderIdAvailableDropdown" name="orderIdAvailableDropdown" multiple class="chosen-select form-control">
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipper_id, "Chọn người giao", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipper_id, new { htmlAttributes = new { @class = "cb_text_shipper form-control", @Style = "display:none;" } })
                <select class="form-control" id="shipperAvailableDropdown" name="shipperAvailableDropdown">
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Hoàn thành" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js"></script>
    <link href="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $(".chosen-select").chosen({
                no_results_text: "Khong tim thay don hang: "
            });

            function mapOrder(item) {
                $(".chosen-select").append('<option value="' + item.Id + '">' + (item.ItemCode == null ? 'Không tên' : item.ItemName) + '</option>');
                $(".chosen-select").trigger("chosen:updated");
            }

            function mapShipper(item) {
                $("#shipperAvailableDropdown").append('<option value="' + item.ID + '">' + (item.FullName == null ? 'Không tên' : item.FullName) + '</option>');
            }

            $("#orderIdAvailableDropdown").change(function () {
                orderId = $(this).val();
                updateOrderIds(orderId);
            });
            function updateOrderIds(selectedOrderIds) {
                var orderIdsString = selectedOrderIds.join(',');
                $('.cb_text_order').val(orderIdsString);
            }
            $("#shipperAvailableDropdown").change(function () {
                shipperId = $(this).val();
                $('.cb_text_shipper').val(shipperId);
            });

            let idwarehouse = $('#warehouse').text();
            function loadData() {
                $.ajax({
                    url: '/WareHouse/GetOrderAvailable',
                    type: 'GET',
                    data: { id: idwarehouse },
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        //updateOrderIds(response[0].Id);
                        response.forEach(mapOrder);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching orders:', error);
                    }
                });
            }

            function loadDataShipper() {
                $.ajax({
                    url: '/WareHouse/GetShipperAvailable',
                    type: 'GET',
                    data: { id: idwarehouse },
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        $('.cb_text_shipper').val(response[0].ID);
                        response.forEach(mapShipper);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching shippers:', error);
                    }
                });
            }

            loadDataShipper();
            loadData();
        });


    </script>
    @Scripts.Render("~/bundles/jqueryval")
}